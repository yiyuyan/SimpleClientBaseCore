******************************
配置条目说明
[文件名]
    （数据类型） "量名称": 默认值;
******************************

[server-id.txt] 服务端ID
    这个值在服务器第一次启动时自动生成，用于区分不同的服务端，不应该修改

[setting-client-auth.json] 客户端验证
    每个客户端在初次连接到服务器时都会被分配一个 ID ，
    如果客户端的 ID 与玩家名称不匹配，则会被拒绝链接

    (boolean) "enabled": false
        是否开启此功能

    (int) "interval": 10;
        (秒) 每两次验证的时间间隔

    (int) "timeout": 5;
        (秒) 超时时间，超过此时间仍未收到验证消息则断开连接

[setting-file-checksum.json] 文件校验
    检查客户端的本地文件，以便进行版本管理
    服务端需要提前记录客户端文件特征，配置方式如下：
        1. 规划好你的整合包，把所有要使用的模组及其他文件添加进对应的文件夹；
        2. 准备好后运行测试用服务端，运行服务端命令 /jarsauth record，打开记录模式。
           此模式下服务端会允许任何客户端的连接，并记录下他们的细节；
        3. 用客户端连接服务端；
        4. 当在服务端控制台中看到 “Client details reloaded” ，存档文件夹中会生成一个[acc-x.json]的文件。
           然后断开连接，在次运行服务端命令 /jarsauth record ，关闭记录模式；
           你可以修改此文件的名称以便区分不同的版本，只要以 "acc-" 开头就行，如 [acc-test.json]
        5. 配置文件将会在存档文件夹中生成，即 [setting-file-checksum.json] 文件，仔细阅读下面的说明，修改配置；
        6. 完成后运行服务器命令 /jarsauth reload ，重载配置。此后任何时间修改配置后必须使用此命令使之生效；
        7. 该客户端可以连接到服务端了，客户端侧不再需要配置。
        8. 如果要拒绝客户端连接，删除对应的 [acc-x.json] 文件即可。
        9. 【注意】可能会由于网络波动导致验证失败，重新连接即可。

    (boolean) "enabled": false
        是否开启此功能

    (list) "inclusion": [
        "mods/*",
        "resourcepacks/examplefile.zip",
        "shaderpacks",
        "example.txt"
    ]
        表示需要检查的文件或文件夹
        星号结尾表示文件夹中所有文件及子文件夹中的所有文件
        以特定的名称结尾，表示某个文件或者某个文件夹，这里的文件夹只检查子文件，不包括子文件夹中的文件
        所有在inclusion中的文件或文件夹将会被检查，
        在默认配置中，以下文件会被检查：
        mods文件夹下所有文件（包括子文件夹中的文件）
        resourcepacks下面的examplefile.zip单个文件，不包含此文件夹中其他的文件
        shaderpacks文件夹中所有的文件，但不包含shaderpacks中任何子文件夹中的文件
        .minecraft（根目录）下面的example.txt文件

    (int) "interval": 20
        (秒) 每两次验证的时间间隔

    (int) "timeout": 10
        (秒) 超时时间，超过此时间仍未收到验证消息则断开连接

[setting-server-license.json] 服务端许可证
    使用服务端侧的许可证来管理客户端的连接时间。
    服务端启动时会自动把模组文件 [JarsAuth-*.jar] 复制到服务端存档目录下面。双击运行，打开服务端证书管理界面
    文件 -> 新建 （快捷键 Insert）新建证书，打开编辑窗口，输入信息后保存
    文件 -> 查看 （快捷键 双击文件）查看当前选中的证书，并且可以编辑
    文件 -> 删除 （快捷键 Delete）删除证书
    时间按照如下格式“yyyyMMddHHmmss”，如“20240701150000”
    在“玩家名称”文本框内可以通过名称快速筛选玩家

    (boolean) "enabled": false
        是否开启此功能

    (boolean) "autoRemove": false
        是否自动删除无效证书

    (int) "authPerMinute": 4
        每分钟验证次数 > 1
        为了提高程序精度，建议填写可以被60整除的值，如 4，6，15 等
        由于每次验证都会读写证书文件，过于频繁的验证可能会导致性能问题，或者会影响磁盘寿命

    (int) "generalAllowance": 0
        (秒) 在没有证书的情况下，最多允许“试玩”多少时间
