The translation is generated by ChatGPT.
In case of any ambiguity, please refer to Chinese texts.

******************************
Configuration Item Description
[Filename]
    (Data Type) "Attribute Name": Default Value;
******************************

[server-id.txt] Server ID
    This value is automatically generated when the server starts for the first time,
    used to distinguish different servers, and should not be modified.

[setting-client-auth.json] Client Authentication
    Each client is assigned an ID when it connects to the server for the first time.
    If the client's ID does not match the player's name, the connection will be rejected.

    (boolean) "enabled": false
        Whether to enable this feature

    (int) "interval": 10;
        (seconds) Time interval between two verifications

    (int) "timeout": 5;
        (seconds) The client will be disconnected if no verification message is received within this time

[setting-file-checksum.json] File Checksum
    Check the local files of the client for version management.
    The server needs to record the client's file characteristics in advance. The configuration steps are as follows:
        1. Plan your mod pack and add all the mods and other files you want to use into the corresponding folders;
        2. After preparation, run the test server, execute the server command /jarsauth record to enter recording mode.
           In this mode, the server will allow any client to connect and record their details;
        3. Connect to the server with the client;
        4. When you see "Client details reloaded" in the server console, a file named [acc-x.json] will be generated in the save folder.
           Disconnect and run the server command /jarsauth record again to exit recording mode;
           You can rename this file to distinguish different versions as long as it starts with "acc-", such as [acc-test.json].
        5. The configuration file [setting-file-checksum.json] will be generated in the save folder. Read the instructions carefully and modify the configuration;
        6. After completion, run the server command /jarsauth reload to reload the configuration. Any subsequent changes must be reloaded with this command to take effect;
        7. The client can now connect to the server, and no further configuration is required on the client side.
        8. To reject a client's connection, delete the corresponding [acc-x.json] file.
        9. [Note] Verification may fail due to network fluctuations. Reconnecting should resolve this.

    (boolean) "enabled": false
        Whether to enable this feature

    (list) "inclusion": [
        "mods/*",
        "resourcepacks/examplefile.zip",
        "shaderpacks",
        "example.txt"
    ]
        Specifies the files or folders to be checked.
        An asterisk indicates all files and subfolders within the folder.
        A specific name indicates a particular file or folder; only the files within the folder will be checked, not the subfolders.
        All files or folders listed in inclusion will be checked.
        In the default configuration, the following files will be checked:
        All files within the "mods" folder (including those in subfolders),
        The "examplefile.zip" file in the "resourcepacks" folder (excluding other files in the folder),
        All files in the "shaderpacks" folder (excluding any subfolders),
        The example.txt file in the ".minecraft" (root) directory.

    (int) "interval": 20
        (seconds) Time interval between two verifications

    (int) "timeout": 10
        (seconds) The client will be disconnected if no verification message is received within this time

[setting-server-license.json] Server License
    Manage client connection time using a server-side license.
    The mod file [JarsAuth-*.jar] will be automatically copied to the server save directory when the server starts.
    Double-click to run and open the server license management interface.
    File -> New (Insert key) to create a new license and open the edit window. Enter information and save.
    File -> View (Double-click file) to view and edit the selected license.
    File -> Delete (Delete key) to delete the license.
    Time format should be "yyyyMMddHHmmss", e.g., "20240701150000".
    Use the "Player Name" text box to quickly filter players.

    (boolean) "enabled": false
        Whether to enable this feature

    (boolean) "autoRemove": false
        Whether to automatically delete invalid licenses

    (int) "authPerMinute": 4
        Verification times per minute > 1.
        To improve precision, it is recommended to use a value that can be evenly divided by 60, such as 4, 6, 15, etc.
        Frequent verification may cause performance issues or affect disk lifespan due to repeated license file read/write operations.

    (int) "generalAllowance": 0
        (seconds) Maximum "trial" time allowed without a license
